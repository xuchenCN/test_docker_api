# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import test_pty_pb2 as test__pty__pb2


class PTYServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.command = channel.unary_stream(
        '/PTYService/command',
        request_serializer=test__pty__pb2.CmdRequest.SerializeToString,
        response_deserializer=test__pty__pb2.CmdResponse.FromString,
        )


class PTYServiceServicer(object):

  def command(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PTYServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'command': grpc.unary_stream_rpc_method_handler(
          servicer.command,
          request_deserializer=test__pty__pb2.CmdRequest.FromString,
          response_serializer=test__pty__pb2.CmdResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PTYService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
